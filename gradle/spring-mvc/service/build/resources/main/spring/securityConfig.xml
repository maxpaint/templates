<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	   					   http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

    <security:global-method-security secured-annotations="enabled" pre-post-annotations="enabled"/>
    <!--bean id="placeholderConfig" class="com.db.sau.core.util.PropertyManager">
        <property name="location" value="classpath:application.properties"/>
    </bean-->

    <!--
        We need to change strategyName to MODE_INHERITABLETHREADLOCAL
        in order to access spring security context in other threads, not "main"
        (services like "GMC", "TCP" etc. launch new thread every time we validate them from UI)
    -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetClass" value="org.springframework.security.core.context.SecurityContextHolder"/>
        <property name="targetMethod" value="setStrategyName" />
        <property name="arguments" value="MODE_INHERITABLETHREADLOCAL" />
    </bean>

    <security:http auto-config="false" use-expressions="true">
        <security:intercept-url pattern="/view/app/gemini/kcp.do"  access="hasRole('USER_ACTION_GEMINI_OPERATOR')" />
        <security:intercept-url pattern="/view/app/gemini/teams.do"  access="hasRole('USER_ACTION_GEMINI_OPERATOR')" />
        <security:intercept-url pattern="/view/app/gemini/approvers.do"  access="hasRole('USER_ACTION_GEMINI_OPERATOR')" />
        <security:intercept-url pattern="/view/app/gemini/mainData.do"  access="hasRole('USER_ACTION_GEMINI_OPERATOR')" />
        <security:intercept-url pattern="/view/app/gemini/publish.do"  access="hasRole('USER_ACTION_GEMINI_OPERATOR')" /><!--USER_ACTION_SAU_CPM_ETL-->
        <security:intercept-url pattern="/view/**"  access="permitAll" />

        <!--filters="none" -->
        <!-- Note DIGEST is better than BASIC authentication, but requires the clear
            text password, which is much less secure, so it is not used here
            http://static.springsource.org/spring-security/site/docs/2.0.x/reference/digest.html
        -->
        <security:http-basic/>
    </security:http>

    <!-- These can be salted with a more elaborate implementation, but if they steal this file, they've got context.xml and the db creds too -->
    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider>
            <!-- New Production users -->
            <security:user-service>
                <security:user name="Max" password="Max" authorities="USER_ACTION_GEMINI_OPERATOR" />
                <security:user name="admin" password="admin" authorities="USER_ACTION_GEMINI_OPERATOR" />
            </security:user-service>
        </security:authentication-provider>
    </security:authentication-manager>

    <!-- ADK -->
    <!--bean id="autobahnUserDetailsService" class="com.db.sau.core.security.AutobahnUserDetailsService">
        <property name="abAccessService" ref="abAccessJaxProxyService"/>
    </bean>

    <bean id="abAccessJaxProxyService" class="com.db.sau.core.security.CustomJaxWsPortProxyFactoryBean">
        <property name="serviceInterface" value="com.db.gmec.entitlementsapi.GMECEntitlementsAPIServicePortType"/>
        <property name="wsdlDocumentUrl" value="/unprotected/GMECEntitlementsAPIService.wsdl"/>
        <property name="namespaceUri" value="http://www.db.com/GMEC/EntitlementsAPI"/>
        <property name="serviceName" value="GMECEntitlementsAPIService"/>
        <property name="portName" value="GMECEntitlementsAPIPort"/>
    </bean-->
</beans>